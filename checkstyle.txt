Starting audit...
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\fileio\CardInput.java:6:8: Unused import - main.game.Deck. [UnusedImports]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\fileio\CardInput.java:18:18: Variable 'objectMapper' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\fileio\CardInput.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\fileio\DecksInput.java:3:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\fileio\DecksInput.java:4:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:10:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:10:25: Variable 'cards' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:11:22: Variable 'objectMapper' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:13:21: Parameter cards should be final. [FinalParameters]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:17:9: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:21:9: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'toArrayNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'toArrayNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:21:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:31:9: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:33:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Deck.java:34:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:10:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:12:22: Variable 'objectMapper' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:13:21: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:13:34: Parameter gameNo should be final. [FinalParameters]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:17: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:20: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:21: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:25: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:26: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:29:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'handleAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'handleAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:29:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:29:40: Parameter actionsInput should be final. [FinalParameters]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:47:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:49:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:50:62: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:51:66: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:55:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getFirstPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getFirstPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:59:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getSecondPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getSecondPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:63:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:63:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:63:33: Parameter idx should be final. [FinalParameters]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:64:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Game.java:66:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:10:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:12:23: Parameter hero should be final. [FinalParameters]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:12:39: Parameter deck should be final. [FinalParameters]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:12:61: Parameter shuffleSeed should be final. [FinalParameters]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:18:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:20:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:21:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:22:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:26:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\game\Player.java:30:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\Main.java:14:8: Unused import - java.io.Console. [UnusedImports]
[ERROR] C:\Users\alexd\IdeaProjects\poo teme\tema0\.\src\main\Main.java:57:17: 'if' construct must use '{}'s. [NeedBraces]
Audit done.
Checkstyle ends with 50 errors.
